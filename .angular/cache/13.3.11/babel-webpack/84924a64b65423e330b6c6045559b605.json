{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Projetos\\\\Angular\\\\VisualizadorEsteganografia\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let DeteccaoEstaganografiaService = /*#__PURE__*/(() => {\n  class DeteccaoEstaganografiaService {\n    constructor() {}\n\n    decodificarImagem(imagem) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const imagemBuffer = yield _this.blobParaArrayBuffer(imagem);\n\n        const executavelBuffer = _this.extrairExecutavel(imagemBuffer);\n\n        if (executavelBuffer) {\n          return {\n            status: true,\n            msg: 'Esteganografia detectada na imagem.'\n          };\n        } else {\n          return {\n            status: false,\n            msg: 'Nenhuma Esteganografia detectada na imagem.'\n          };\n        }\n      })();\n    }\n\n    blobParaArrayBuffer(blob) {\n      return _asyncToGenerator(function* () {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n\n          reader.onload = () => resolve(reader.result);\n\n          reader.onerror = reject;\n          reader.readAsArrayBuffer(blob);\n        });\n      })();\n    }\n\n    extrairExecutavel(imagemBuffer) {\n      // Cabeçalhos de arquivos executáveis comuns\n      const cabecalhos = {\n        'MZ': [0x4D, 0x5A],\n        'ELF': [0x7F, 0x45, 0x4C, 0x46],\n        'MACHO': [0xCF, 0xFA, 0xED, 0xFE] // Mach-O\n\n      };\n      const imagemArray = new Uint8Array(imagemBuffer);\n\n      for (const tipo in cabecalhos) {\n        if (Object.prototype.hasOwnProperty.call(cabecalhos, tipo)) {\n          const header = new Uint8Array(cabecalhos[tipo]);\n\n          for (let i = 0; i < imagemArray.length - header.length; i++) {\n            let match = true;\n\n            for (let j = 0; j < header.length; j++) {\n              if (imagemArray[i + j] !== header[j]) {\n                match = false;\n                break;\n              }\n            }\n\n            if (match) {\n              // Se o cabeçalho foi encontrado, retorna o buffer a partir desse ponto\n              return imagemArray.slice(i).slice(header.length);\n            }\n          }\n        }\n      } // Se nenhum cabeçalho foi encontrado, retorna null\n\n\n      return null;\n    }\n\n  }\n\n  DeteccaoEstaganografiaService.ɵfac = function DeteccaoEstaganografiaService_Factory(t) {\n    return new (t || DeteccaoEstaganografiaService)();\n  };\n\n  DeteccaoEstaganografiaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DeteccaoEstaganografiaService,\n    factory: DeteccaoEstaganografiaService.ɵfac,\n    providedIn: 'root'\n  });\n  return DeteccaoEstaganografiaService;\n})();","map":null,"metadata":{},"sourceType":"module"}